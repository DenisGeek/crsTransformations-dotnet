buildscript {
	ext.kotlin_version = '1.2.71'

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'kotlin'

	group = 'com.programmerare.crsTransformations'
	version = '1.0'

	repositories {
		// GeoTools
		// http://docs.geotools.org/latest/userguide/tutorial/quickstart/maven.html
		// https://github.com/geotools/geotools/blob/master/pom.xml
		maven {
			url "https://repo.boundlessgeo.com/release/"
		}
		maven {
			url "http://download.osgeo.org/webdav/geotools/"
		}

		mavenCentral()
		jcenter()
		google()
	}

	dependencies {
		implementation("org.jetbrains.kotlin:kotlin-runtime:$kotlin_version")
		implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

		// https://mvnrepository.com/artifact/org.junit.jupiter
		// https://github.com/junit-team/junit5/releases
		testImplementation("org.junit.jupiter:junit-jupiter-engine:5.3.1")
		testImplementation("org.junit.jupiter:junit-jupiter-params:5.3.1")

		testImplementation("org.hamcrest:hamcrest-library:1.3")


		// TODO: not all modules will need the dependencies below
		implementation("com.github.goober:coordinate-transformation-library:1.1")
		implementation("org.orbisgis:cts:1.5.1")
		implementation("org.osgeo:proj4j:0.1.0")
		implementation("org.geotools:gt-main:20.0")
		implementation("org.geotools:gt-epsg-hsql:20.0") // runtime exception if this is not included: org.opengis.referencing.NoSuchAuthorityCodeException: No code "EPSG:4326" from authority "EPSG" found for object of type "EngineeringCRS".
		implementation("javax.media:jai_core:1.1.3") // otherwise geotools causes this: Could not find jai_core.jar (javax.media:jai_core:1.1.3)

		// https://mvnrepository.com/artifact/org.geotools/gt-data?repo=boundless
		// https://mvnrepository.com/artifact/org.geotools/gt-shapefile?repo=boundless
		// https://mvnrepository.com/artifact/org.geotools/gt-main?repo=boundless
		// https://mvnrepository.com/artifact/org.geotools/gt-epsg-hsql?repo=boundless
		// http://geotools.org/
		// https://sourceforge.net/projects/geotools/
		// Used for shapefile parsing in the code generation module:
		compile group: 'org.geotools', name: 'gt-data', version: '20.0'
		compile group: 'org.geotools', name: 'gt-shapefile', version: '20.0'

		// https://mvnrepository.com/artifact/mil.nga.geopackage/geopackage
		// https://github.com/ngageoint/GeoPackage
		compile group: 'mil.nga.geopackage', name: 'geopackage', version: '3.1.0'
		compile group: 'mil.nga.geopackage', name: 'geopackage-core', version: '3.1.0'

		// https://mvnrepository.com/artifact/com.google.guava/guava
		// https://github.com/google/guava/releases
		compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
	}
	test {
		// Enable JUnit 5 (Gradle 4.6+).
		useJUnitPlatform()

		// Always run tests, even when nothing changed.
		// dependsOn 'cleanTest'

		testLogging {
			events "passed", "skipped", "failed" // , "standardOut", "standardError"
		}
	}

}

project(':crsTransformationGeoTools') {
	dependencies {
		implementation project(':crsTransformationCore')
	}
}

project(':crsTransformationGooberCTL') {
    dependencies {
        implementation project(':crsTransformationCore')
    }
}

project(':crsTransformationOrbisgisCTS') {
    dependencies {
        implementation project(':crsTransformationCore')
    }
}

project(':crsTransformationProj4J') {
	dependencies {
		implementation project(':crsTransformationCore')
	}
}

project(':crsTransformationGeoPackageNGA') {
	dependencies {
		implementation project(':crsTransformationCore')
	}
}

project(':crsTransformationTest') {
	dependencies {
		implementation project(':crsTransformationCore'), project(':crsTransformationOrbisgisCTS'), project(':crsTransformationGooberCTL'), project(':crsTransformationGeoTools'), project(':crsTransformationProj4J'), project(':crsTransformationGeoPackageNGA'), project(':crsConstants')
		// https://mvnrepository.com/artifact/org.geotools/gt-shapefile
//		implementation("group:org.geotools:gt-shapefile:19.1")
//		implementation("group:org.geotools:gt-data:19.1")
//		implementation("group:org.geotools:gt-shapefile:19.1")
// https://mvnrepository.com/artifact/org.geotools/gt-shapefile
//		compile group: 'org.geotools', name: 'gt-shapefile', version: '19.1'
	}
}

project(':crsCodeGeneration') {
	// command line execution
	// gradle generateClassesWithEpsgConstants
	// or, if something else than the default/hardcoded class name should be used:
	// gradle generateClassesWithEpsgConstants -PmainClass=com.programmerare.crsCodeGeneration.constantsGenerator.ConstantClassGenerator
	task generateClassesWithEpsgConstants(type:JavaExec) {
		main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "com.programmerare.crsCodeGeneration.constantsGenerator.ConstantClassGenerator"
		classpath = sourceSets.main.runtimeClasspath
	}

	// command line execution
	// gradle generateCsvTestDataFromEpsgDatabaseAndShapefile
	// or, if something else than the default/hardcoded class name should be used:
	// gradle generateCsvTestDataFromEpsgDatabaseAndShapefile -PmainClass=com.programmerare.crsCodeGeneration.coordinateTestDataGenerator.CoordinateTestDataGenerator
	task generateCsvTestDataFromEpsgDatabaseAndShapefile(type:JavaExec) {
		main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "com.programmerare.crsCodeGeneration.coordinateTestDataGenerator.CoordinateTestDataGenerator"
		classpath = sourceSets.main.runtimeClasspath
	}

	dependencies {
		// https://mvnrepository.com/artifact/org.freemarker/freemarker
		implementation("org.freemarker:freemarker:2.3.28")
		// https://mvnrepository.com/artifact/net.sf.ucanaccess/ucanaccess
		implementation("net.sf.ucanaccess:ucanaccess:4.0.4")
		// https://mvnrepository.com/artifact/org.springframework/spring-jdbc
		// https://github.com/spring-projects/spring-framework/releases
		implementation("org.springframework:spring-jdbc:5.1.0.RELEASE")
	}
}